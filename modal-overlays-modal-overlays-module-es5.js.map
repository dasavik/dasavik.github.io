{"version":3,"sources":["webpack:///src/app/pages/modal-overlays/dialog/dialog-name-prompt/dialog-name-prompt.component.ts","webpack:///src/app/pages/modal-overlays/dialog/dialog-name-prompt/dialog-name-prompt.component.html","webpack:///src/app/pages/modal-overlays/dialog/dialog.component.ts","webpack:///src/app/pages/modal-overlays/dialog/dialog.component.html","webpack:///src/app/pages/modal-overlays/dialog/showcase-dialog/showcase-dialog.component.ts","webpack:///src/app/pages/modal-overlays/dialog/showcase-dialog/showcase-dialog.component.html","webpack:///src/app/pages/modal-overlays/modal-overlays-routing.module.ts","webpack:///src/app/pages/modal-overlays/modal-overlays.component.ts","webpack:///src/app/pages/modal-overlays/modal-overlays.module.ts","webpack:///src/app/pages/modal-overlays/popovers/popover-examples.component.ts","webpack:///src/app/pages/modal-overlays/popovers/popovers.component.ts","webpack:///src/app/pages/modal-overlays/popovers/popovers.component.html","webpack:///src/app/pages/modal-overlays/toastr/toastr.component.ts","webpack:///src/app/pages/modal-overlays/toastr/toastr.component.html","webpack:///src/app/pages/modal-overlays/tooltip/tooltip.component.ts","webpack:///src/app/pages/modal-overlays/tooltip/tooltip.component.html","webpack:///src/app/pages/modal-overlays/window/window-form/window-form.component.ts","webpack:///src/app/pages/modal-overlays/window/window.component.ts","webpack:///src/app/pages/modal-overlays/window/window.component.html"],"names":["DialogNamePromptComponent","ref","close","name","cancel","submit","selector","templateUrl","styleUrls","DialogComponent","dialogService","names","open","context","title","dialog","onClose","subscribe","push","hasBackdrop","closeOnBackdropClick","closeOnEsc","open2","openWithoutBackdrop","openWithoutEscClose","openWithoutBackdropClick","open3","ShowcaseDialogComponent","dismiss","routes","path","component","children","ModalOverlaysRoutingModule","forChild","imports","exports","ModalOverlaysComponent","template","COMPONENTS","ENTRY_COMPONENTS","MODULES","SERVICES","ModalOverlaysModule","declarations","providers","entryComponents","NgxPopoverTabsComponent","NgxPopoverFormComponent","NgxPopoverCardComponent","styles","PopoversComponent","tabsComponent","cardComponent","formComponent","ToastrComponent","toastrService","index","destroyByClick","duration","hasIcon","position","TOP_RIGHT","preventDuplicates","status","content","types","positions","TOP_LEFT","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_END","TOP_START","BOTTOM_END","BOTTOM_START","quotes","body","showToast","typeIndex","Math","floor","random","length","quoteIndex","type","quote","config","titleContent","show","makeToast","openRandomToast","TooltipComponent","WindowFormComponent","windowRef","WindowComponent","windowService","contentTemplate","text","disabledEscTemplate","openWindowForm","openWindow","openWindowWithoutBackdrop","static","read"],"mappings":"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","file":"modal-overlays-modal-overlays-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-dialog-name-prompt',\r\n  templateUrl: 'dialog-name-prompt.component.html',\r\n  styleUrls: ['dialog-name-prompt.component.scss'],\r\n})\r\nexport class DialogNamePromptComponent {\r\n\r\n  constructor(protected ref: NbDialogRef<DialogNamePromptComponent>) {}\r\n\r\n  cancel() {\r\n    this.ref.close();\r\n  }\r\n\r\n  submit(name) {\r\n    this.ref.close(name);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>Enter your name</nb-card-header>\r\n  <nb-card-body>\r\n    <input #name nbInput placeholder=\"Name\">\r\n  </nb-card-body>\r\n  <nb-card-footer>\r\n    <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Cancel</button>\r\n    <button nbButton status=\"success\" (click)=\"submit(name.value)\">Submit</button>\r\n  </nb-card-footer>\r\n</nb-card>\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { ShowcaseDialogComponent } from './showcase-dialog/showcase-dialog.component';\r\nimport { DialogNamePromptComponent } from './dialog-name-prompt/dialog-name-prompt.component';\r\n\r\n@Component({\r\n  selector: 'ngx-dialog',\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss'],\r\n})\r\nexport class DialogComponent {\r\n\r\n  names: string[] = [];\r\n\r\n  constructor(private dialogService: NbDialogService) {}\r\n\r\n  open() {\r\n    this.dialogService.open(ShowcaseDialogComponent, {\r\n      context: {\r\n        title: 'This is a title passed to the dialog component',\r\n      },\r\n    });\r\n  }\r\n\r\n  open2(dialog: TemplateRef<any>) {\r\n    this.dialogService.open(\r\n      dialog,\r\n      { context: 'this is some additional data passed to dialog' });\r\n  }\r\n\r\n  open3() {\r\n    this.dialogService.open(DialogNamePromptComponent)\r\n      .onClose.subscribe(name => name && this.names.push(name));\r\n  }\r\n\r\n  openWithoutBackdrop(dialog: TemplateRef<any>) {\r\n    this.dialogService.open(\r\n      dialog,\r\n      {\r\n        context: 'this is some additional data passed to dialog',\r\n        hasBackdrop: false,\r\n      });\r\n  }\r\n\r\n  openWithoutBackdropClick(dialog: TemplateRef<any>) {\r\n    this.dialogService.open(\r\n      dialog,\r\n      {\r\n        context: 'this is some additional data passed to dialog',\r\n        closeOnBackdropClick: false,\r\n      });\r\n  }\r\n\r\n  openWithoutEscClose(dialog: TemplateRef<any>) {\r\n    this.dialogService.open(\r\n      dialog,\r\n      {\r\n        context: 'this is some additional data passed to dialog',\r\n        closeOnEsc: false,\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-3\">\r\n    <nb-card>\r\n      <nb-card-header>Open Dialog</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbButton (click)=\"open()\">Open Dialog with component</button>\r\n\r\n        <button nbButton (click)=\"open2(dialog)\">Open Dialog with template</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-3\">\r\n    <nb-card>\r\n      <nb-card-header>Open Without Backdrop</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbButton (click)=\"open()\">Open Dialog with backdrop</button>\r\n\r\n        <button nbButton (click)=\"openWithoutBackdrop(dialog)\">Open Dialog without backdrop</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-3\">\r\n    <nb-card>\r\n      <nb-card-header>Open Without Esc Close</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbButton (click)=\"open()\">Open Dialog with esc close</button>\r\n\r\n        <button nbButton (click)=\"openWithoutEscClose(dialog)\">Open Dialog without esc close</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-3\">\r\n    <nb-card>\r\n      <nb-card-header>Open Without Backdrop Click</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbButton (click)=\"open()\">Open Dialog with backdrop click</button>\r\n\r\n        <button nbButton (click)=\"openWithoutBackdropClick(dialog)\">Open without backdrop click</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-3\">\r\n    <nb-card class=\"form-input-card\">\r\n      <nb-card-header>Return Result From Dialog</nb-card-header>\r\n      <nb-card-body class=\"result-from-dialog\">\r\n        <button nbButton (click)=\"open3()\">Enter Name</button>\r\n        <br>\r\n        <h3 class=\"title\">Names:</h3>\r\n        <ul>\r\n          <li *ngFor=\"let name of names\">{{ name }}</li>\r\n        </ul>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #dialog let-data let-ref=\"dialogRef\">\r\n  <nb-card>\r\n    <nb-card-header>Template Dialog</nb-card-header>\r\n    <nb-card-body>{{ data }}</nb-card-body>\r\n    <nb-card-footer>\r\n      <button nbButton (click)=\"ref.close()\">Close Dialog</button>\r\n    </nb-card-footer>\r\n  </nb-card>\r\n</ng-template>\r\n\r\n","import { Component, Input } from '@angular/core';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-showcase-dialog',\r\n  templateUrl: 'showcase-dialog.component.html',\r\n  styleUrls: ['showcase-dialog.component.scss'],\r\n})\r\nexport class ShowcaseDialogComponent {\r\n\r\n  @Input() title: string;\r\n\r\n  constructor(protected ref: NbDialogRef<ShowcaseDialogComponent>) {}\r\n\r\n  dismiss() {\r\n    this.ref.close();\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>{{ title }}</nb-card-header>\r\n  <nb-card-body>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras convallis tincidunt tincidunt.\r\n    Vestibulum vulputate maximus massa vel tristique. Suspendisse potenti. Duis aliquet purus sed dictum dictum.\r\n    Donec fringilla, purus at fermentum imperdiet, velit enim malesuada turpis, quis luctus arcu arcu nec orci.\r\n    Duis eu mattis felis. Quisque sollicitudin elementum nunc vel tincidunt. Vestibulum egestas mi nec\r\n    iaculis varius. Morbi in risus sed sapien ultricies feugiat. Quisque pulvinar mattis purus,\r\n    in aliquet massa aliquet et.\r\n  </nb-card-body>\r\n  <nb-card-footer>\r\n    <button nbButton hero status=\"primary\" (click)=\"dismiss()\">Dismiss Dialog</button>\r\n  </nb-card-footer>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ModalOverlaysComponent } from './modal-overlays.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { WindowComponent } from './window/window.component';\r\nimport { PopoversComponent } from './popovers/popovers.component';\r\nimport { ToastrComponent } from './toastr/toastr.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ModalOverlaysComponent,\r\n  children: [\r\n    {\r\n      path: 'dialog',\r\n      component: DialogComponent,\r\n    },\r\n    {\r\n      path: 'window',\r\n      component: WindowComponent,\r\n    },\r\n    {\r\n      path: 'popover',\r\n      component: PopoversComponent,\r\n    },\r\n    {\r\n      path: 'tooltip',\r\n      component: TooltipComponent,\r\n    },\r\n    {\r\n      path: 'toastr',\r\n      component: ToastrComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ModalOverlaysRoutingModule {\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-modal-overlays',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\n\r\nexport class ModalOverlaysComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  NbButtonModule,\r\n  NbCardModule,\r\n  NbCheckboxModule,\r\n  NbDialogModule,\r\n  NbInputModule,\r\n  NbPopoverModule,\r\n  NbSelectModule,\r\n  NbTabsetModule,\r\n  NbTooltipModule,\r\n  NbWindowModule,\r\n} from '@nebular/theme';\r\n\r\n// modules\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ModalOverlaysRoutingModule } from './modal-overlays-routing.module';\r\n\r\n// components\r\nimport { ModalOverlaysComponent } from './modal-overlays.component';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { ShowcaseDialogComponent } from './dialog/showcase-dialog/showcase-dialog.component';\r\nimport { DialogNamePromptComponent } from './dialog/dialog-name-prompt/dialog-name-prompt.component';\r\nimport { WindowComponent } from './window/window.component';\r\nimport { WindowFormComponent } from './window/window-form/window-form.component';\r\nimport { ToastrComponent } from './toastr/toastr.component';\r\nimport { PopoversComponent } from './popovers/popovers.component';\r\nimport {\r\n  NgxPopoverCardComponent, NgxPopoverFormComponent,\r\n  NgxPopoverTabsComponent,\r\n} from './popovers/popover-examples.component';\r\nimport { TooltipComponent } from './tooltip/tooltip.component';\r\n\r\n\r\nconst COMPONENTS = [\r\n  ModalOverlaysComponent,\r\n  ToastrComponent,\r\n  DialogComponent,\r\n  ShowcaseDialogComponent,\r\n  DialogNamePromptComponent,\r\n  WindowComponent,\r\n  WindowFormComponent,\r\n  PopoversComponent,\r\n  NgxPopoverCardComponent,\r\n  NgxPopoverFormComponent,\r\n  NgxPopoverTabsComponent,\r\n  TooltipComponent,\r\n];\r\n\r\nconst ENTRY_COMPONENTS = [\r\n  ShowcaseDialogComponent,\r\n  DialogNamePromptComponent,\r\n  WindowFormComponent,\r\n  NgxPopoverCardComponent,\r\n  NgxPopoverFormComponent,\r\n  NgxPopoverTabsComponent,\r\n];\r\n\r\nconst MODULES = [\r\n  FormsModule,\r\n  ThemeModule,\r\n  ModalOverlaysRoutingModule,\r\n  NbDialogModule.forChild(),\r\n  NbWindowModule.forChild(),\r\n  NbCardModule,\r\n  NbCheckboxModule,\r\n  NbTabsetModule,\r\n  NbPopoverModule,\r\n  NbButtonModule,\r\n  NbInputModule,\r\n  NbSelectModule,\r\n  NbTooltipModule,\r\n];\r\n\r\nconst SERVICES = [\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ...MODULES,\r\n  ],\r\n  declarations: [\r\n    ...COMPONENTS,\r\n  ],\r\n  providers: [\r\n    ...SERVICES,\r\n  ],\r\n  entryComponents: [\r\n    ...ENTRY_COMPONENTS,\r\n  ],\r\n})\r\nexport class ModalOverlaysModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-popover-tabs',\r\n  template: `\r\n    <nb-tabset>\r\n      <nb-tab tabTitle=\"What's up?\">\r\n        <div class=\"p-4\">\r\n          Such a wonderful day!\r\n        </div>\r\n      </nb-tab>\r\n      <nb-tab tabTitle=\"Second Tab\">\r\n        <div class=\"p-4\">\r\n          Indeed!\r\n        </div>\r\n      </nb-tab>\r\n    </nb-tabset>\r\n  `,\r\n})\r\nexport class NgxPopoverTabsComponent {\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-popover-form',\r\n  template: `\r\n    <div class=\"p-4\">\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Recipients\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"Subject\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea class=\"form-control\" placeholder=\"Message\"></textarea>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary w-100\">Send</button>\r\n      </form>\r\n    </div>\r\n  `,\r\n})\r\nexport class NgxPopoverFormComponent {\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-popover-card',\r\n  template: `\r\n    <nb-card class=\"popover-card\">\r\n      <nb-card-header status=\"warning\">\r\n        Hello!\r\n      </nb-card-header>\r\n      <nb-card-body>\r\n        Far far away, behind the word mountains, far from the countries Vokalia and Consonantia,\r\n        there live the blind texts.\r\n        Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.\r\n      </nb-card-body>\r\n    </nb-card>\r\n  `,\r\n  styles: [`\r\n    nb-card {\r\n      margin: 0;\r\n      max-width: 20rem;\r\n    }\r\n  `],\r\n})\r\nexport class NgxPopoverCardComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  NgxPopoverCardComponent, NgxPopoverFormComponent,\r\n  NgxPopoverTabsComponent,\r\n} from './popover-examples.component';\r\n\r\n@Component({\r\n  selector: 'ngx-popovers',\r\n  styleUrls: ['./popovers.component.scss'],\r\n  templateUrl: './popovers.component.html',\r\n})\r\nexport class PopoversComponent {\r\n  tabsComponent = NgxPopoverTabsComponent;\r\n  cardComponent = NgxPopoverCardComponent;\r\n  formComponent = NgxPopoverFormComponent;\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-lg-6\">\r\n    <nb-card size=\"small\">\r\n      <nb-card-header>Popover Position</nb-card-header>\r\n      <nb-card-body>\r\n        <p>When popover has not enough space based on the configured placement, it will adjust accordingly trying to fit the screen.</p>\r\n        <button nbButton status=\"danger\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hint\" nbPopoverPlacement=\"left\">Left</button>\r\n        <button nbButton status=\"danger\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hint\" nbPopoverPlacement=\"top\">Top</button>\r\n        <button nbButton status=\"danger\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hint\" nbPopoverPlacement=\"bottom\">Bottom</button>\r\n        <button nbButton status=\"danger\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hint\" nbPopoverPlacement=\"right\">Right</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-lg-6\">\r\n    <nb-card size=\"small\">\r\n      <nb-card-header>Simple Popovers</nb-card-header>\r\n      <nb-card-body>\r\n        <p>In a simples form popover can take a string of text to render.</p>\r\n        <button nbButton status=\"success\" nbPopover=\"Hello, how are you today?\">on click</button>\r\n        <button nbButton status=\"success\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hover\">on hover</button>\r\n        <button nbButton status=\"success\" nbPopover=\"Hello, how are you today?\" nbPopoverTrigger=\"hint\">on hint</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-lg-6\">\r\n\r\n    <ng-template #tabs>\r\n      <nb-tabset>\r\n        <nb-tab tabTitle=\"What's up?\">\r\n          <div class=\"p-4\">\r\n            Such a wonderful day!\r\n          </div>\r\n        </nb-tab>\r\n        <nb-tab tabTitle=\"Second Tab\">\r\n          <div class=\"p-4\">\r\n            Indeed!\r\n          </div>\r\n        </nb-tab>\r\n      </nb-tabset>\r\n    </ng-template>\r\n\r\n    <ng-template #form>\r\n      <div class=\"p-4\">\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Recipients\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Subject\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <textarea class=\"form-control\" placeholder=\"Message\"></textarea>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary w-100\">Send</button>\r\n        </form>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #card>\r\n      <nb-card class=\"popover-card\">\r\n        <nb-card-header status=\"warning\">\r\n          Hello!\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n          Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.\r\n          Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.\r\n        </nb-card-body>\r\n      </nb-card>\r\n    </ng-template>\r\n\r\n    <nb-card size=\"small\">\r\n      <nb-card-header>Template Popovers</nb-card-header>\r\n      <nb-card-body>\r\n        <p>You can pass a refference to `ng-template` to be rendered.</p>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"tabs\">With tabs</button>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"form\">With form</button>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"card\">With card</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-lg-6\">\r\n    <nb-card size=\"small\">\r\n      <nb-card-header>Component Popovers</nb-card-header>\r\n      <nb-card-body>\r\n        <p>Same way popover can render any angular compnoent.</p>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"tabsComponent\">With tabs</button>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"formComponent\">With form</button>\r\n        <button nbButton status=\"warning\" [nbPopover]=\"cardComponent\">With card</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <nb-card>\r\n      <nb-card-header>Event Debouncing</nb-card-header>\r\n      <nb-card-body class=\"debounce-card\">\r\n        <p>Quickly move mouse cursor over the buttons, only the last popover will be created. It allows us to avoid excess white improving page performance.</p>\r\n\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n        <button nbButton nbPopover=\"Popover!\" nbPopoverTrigger=\"hint\">\r\n          show hint\r\n        </button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport {\r\n  NbComponentStatus,\r\n  NbGlobalLogicalPosition,\r\n  NbGlobalPhysicalPosition,\r\n  NbGlobalPosition,\r\n  NbToastrService,\r\n  NbToastrConfig,\r\n} from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-toastr',\r\n  styleUrls: ['./toastr.component.scss'],\r\n  templateUrl: './toastr.component.html',\r\n})\r\nexport class ToastrComponent {\r\n  constructor(private toastrService: NbToastrService) {}\r\n\r\n  config: NbToastrConfig;\r\n\r\n  index = 1;\r\n  destroyByClick = true;\r\n  duration = 2000;\r\n  hasIcon = true;\r\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_RIGHT;\r\n  preventDuplicates = false;\r\n  status: NbComponentStatus = 'primary';\r\n\r\n  title = 'HI there!';\r\n  content = `I'm cool toaster!`;\r\n\r\n  types: NbComponentStatus[] = [\r\n    'primary',\r\n    'success',\r\n    'info',\r\n    'warning',\r\n    'danger',\r\n  ];\r\n  positions: string[] = [\r\n    NbGlobalPhysicalPosition.TOP_RIGHT,\r\n    NbGlobalPhysicalPosition.TOP_LEFT,\r\n    NbGlobalPhysicalPosition.BOTTOM_LEFT,\r\n    NbGlobalPhysicalPosition.BOTTOM_RIGHT,\r\n    NbGlobalLogicalPosition.TOP_END,\r\n    NbGlobalLogicalPosition.TOP_START,\r\n    NbGlobalLogicalPosition.BOTTOM_END,\r\n    NbGlobalLogicalPosition.BOTTOM_START,\r\n  ];\r\n\r\n  quotes = [\r\n    { title: null, body: 'We rock at Angular' },\r\n    { title: null, body: 'Titles are not always needed' },\r\n    { title: null, body: 'Toastr rock!' },\r\n  ];\r\n\r\n  makeToast() {\r\n    this.showToast(this.status, this.title, this.content);\r\n  }\r\n\r\n  openRandomToast () {\r\n    const typeIndex = Math.floor(Math.random() * this.types.length);\r\n    const quoteIndex = Math.floor(Math.random() * this.quotes.length);\r\n    const type = this.types[typeIndex];\r\n    const quote = this.quotes[quoteIndex];\r\n\r\n    this.showToast(type, quote.title, quote.body);\r\n  }\r\n\r\n  private showToast(type: NbComponentStatus, title: string, body: string) {\r\n    const config = {\r\n      status: type,\r\n      destroyByClick: this.destroyByClick,\r\n      duration: this.duration,\r\n      hasIcon: this.hasIcon,\r\n      position: this.position,\r\n      preventDuplicates: this.preventDuplicates,\r\n    };\r\n    const titleContent = title ? `. ${title}` : '';\r\n\r\n    this.index += 1;\r\n    this.toastrService.show(\r\n      body,\r\n      `Toast ${this.index}${titleContent}`,\r\n      config);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Toaster configuration\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 col-sm-12\">\r\n        <div class=\"form-group\">\r\n          <label class=\"label\">Position:</label>\r\n          <nb-select [(selected)]=\"position\" class=\"position-select\">\r\n            <nb-option *ngFor=\"let p of positions\" [value]=\"p\">{{ p }}</nb-option>\r\n          </nb-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"label\">Title:</label>\r\n          <input nbInput [(ngModel)]=\"title\" name=\"title\">\r\n        </div>\r\n\r\n        <form>\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">Content:</label>\r\n            <input nbInput [(ngModel)]=\"content\" name=\"content\">\r\n          </div>\r\n        </form>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"label\">Time to hide toast, ms. 0 to persistent toast:</label>\r\n          <input nbInput type=\"number\" [(ngModel)]=\"duration\" name=\"timeout\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-sm-12\">\r\n        <div class=\"form-group\">\r\n          <label class=\"label\">Toast type:</label>\r\n          <nb-select [(selected)]=\"status\">\r\n            <nb-option *ngFor=\"let t of types\" [value]=\"t\">{{ t }}</nb-option>\r\n          </nb-select>\r\n        </div>\r\n\r\n        <div>\r\n          <nb-checkbox [(ngModel)]=\"destroyByClick\">Hide on click</nb-checkbox>\r\n        </div>\r\n        <div>\r\n          <nb-checkbox [(ngModel)]=\"preventDuplicates\">Prevent arising of duplicate toast</nb-checkbox>\r\n        </div>\r\n        <div>\r\n          <nb-checkbox [(ngModel)]=\"hasIcon\">Show toast with icon</nb-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nb-card-body>\r\n\r\n  <nb-card-footer>\r\n    <button nbButton (click)=\"makeToast()\">Show toast</button>\r\n    <button nbButton status=\"success\" (click)=\"openRandomToast()\">Random toast</button>\r\n  </nb-card-footer>\r\n</nb-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tooltip',\r\n  templateUrl: 'tooltip.component.html',\r\n  styleUrls: ['tooltip.component.scss'],\r\n})\r\nexport class TooltipComponent {\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-4\">\r\n    <nb-card>\r\n      <nb-card-header>Tooltip With Icon</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipIcon=\"home-outline\" nbButton>Show Tooltip</button>\r\n        <button nbTooltip=\"\" nbTooltipIcon=\"alert-triangle\" nbTooltipStatus=\"danger\" nbButton>Show Tooltip</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-4\">\r\n    <nb-card>\r\n      <nb-card-header>Tooltip Placements</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbButton>Top</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"right\" nbButton>Right</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"bottom\" nbButton>Bottom</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"left\" nbButton>Left</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-6 col-xxxl-4\">\r\n    <nb-card>\r\n      <nb-card-header>Colored Tooltips</nb-card-header>\r\n      <nb-card-body>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbButton>Default</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbTooltipStatus=\"primary\" nbButton>Primary</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbTooltipStatus=\"success\" nbButton>Success</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbTooltipStatus=\"danger\" nbButton>Danger</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbTooltipStatus=\"info\" nbButton>Info</button>\r\n        <button nbTooltip=\"This is a tooltip\" nbTooltipPlacement=\"top\" nbTooltipStatus=\"warning\" nbButton>Warning</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { NbWindowRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  template: `\r\n    <form class=\"form\">\r\n      <label for=\"subject\">Variable Unit:</label>\r\n      <input nbInput id=\"subject\" type=\"text\">\r\n\r\n      <label class=\"text-label\" for=\"text\">Variable Unit:</label>\r\n    </form>\r\n  `,\r\n  styleUrls: ['window-form.component.scss'],\r\n})\r\nexport class WindowFormComponent {\r\n  constructor(public windowRef: NbWindowRef) {}\r\n\r\n  close() {\r\n    this.windowRef.close();\r\n  }\r\n}\r\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\r\nimport { NbWindowService } from '@nebular/theme';\r\nimport { WindowFormComponent } from './window-form/window-form.component';\r\n\r\n@Component({\r\n  selector: 'ngx-window',\r\n  templateUrl: 'window.component.html',\r\n  styleUrls: ['window.component.scss'],\r\n})\r\nexport class WindowComponent {\r\n\r\n  @ViewChild('contentTemplate', { static: true }) contentTemplate: TemplateRef<any>;\r\n  @ViewChild('disabledEsc', { read: TemplateRef, static: true }) disabledEscTemplate: TemplateRef<HTMLElement>;\r\n\r\n  constructor(private windowService: NbWindowService) {}\r\n\r\n  openWindow(contentTemplate) {\r\n    this.windowService.open(\r\n      contentTemplate,\r\n      {\r\n        title: 'Window content from template',\r\n        context: {\r\n          text: 'some text to pass into template',\r\n        },\r\n      },\r\n    );\r\n  }\r\n\r\n  openWindowForm() {\r\n    this.windowService.open(WindowFormComponent, { title: `Window` });\r\n  }\r\n\r\n  openWindowWithoutBackdrop() {\r\n    this.windowService.open(\r\n      this.disabledEscTemplate,\r\n      {\r\n        title: 'Window without backdrop',\r\n        hasBackdrop: false,\r\n        closeOnEsc: false,\r\n      },\r\n    );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-12 col-lg-12 col-xxxl-6\">\r\n    <nb-card>\r\n      <nb-card-header>Window Form</nb-card-header>\r\n      <nb-card-body>\r\n        <button (click)=\"openWindowForm()\" nbButton>Open window form</button>\r\n\r\n        <button (click)=\"openWindow(contentTemplate)\" nbButton>Open window with template</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n\r\n  <div class=\"col-md-12 col-lg-12 col-xxxl-6\">\r\n    <nb-card>\r\n      <nb-card-header>Window Without Backdrop</nb-card-header>\r\n      <nb-card-body>\r\n        <button (click)=\"openWindow(contentTemplate)\" nbButton>Open window with backdrop</button>\r\n\r\n        <button (click)=\"openWindowWithoutBackdrop()\" nbButton>Open window without backdrop</button>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #contentTemplate let-data>\r\n  <p>Here is the text provided via config: \"{{ data.text }}\"</p>\r\n</ng-template>\r\n\r\n<ng-template #disabledEsc>\r\n  Disabled close on escape click.\r\n</ng-template>\r\n"]}