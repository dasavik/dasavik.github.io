{"version":3,"sources":["webpack:///src/app/pages/tables/smart-table/smart-table.component.ts","webpack:///src/app/pages/tables/smart-table/smart-table.component.html","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tables.component.ts","webpack:///src/app/pages/tables/tables.module.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.html"],"names":["SmartTableComponent","service","settings","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","delete","deleteButtonContent","confirmDelete","columns","userId","title","type","editor","config","list","value","id","completed","source","data","getData","load","event","window","confirm","resolve","reject","onDeleteConfirm","selector","templateUrl","styleUrls","routes","path","component","children","TablesRoutingModule","forChild","imports","exports","routedComponents","TablesComponent","template","TablesModule","declarations","TreeGridComponent","dataSourceBuilder","customColumn","defaultColumns","allColumns","sortDirection","NONE","name","size","items","kind","dataSource","create","sortRequest","sortColumn","column","direction","index","minWithForMultipleColumns","nextColumnStep","updateSort","FsIconComponent"],"mappings":"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","file":"tables-tables-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/data/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  // settings = {\r\n  //   add: {\r\n  //     addButtonContent: '<i class=\"nb-plus\"></i>',\r\n  //     createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n  //     cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n  //   },\r\n  //   edit: {\r\n  //     editButtonContent: '<i class=\"nb-edit\"></i>',\r\n  //     saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n  //     cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n  //   },\r\n  //   delete: {\r\n  //     deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n  //     confirmDelete: true,\r\n  //   },\r\n  //   columns: {\r\n  //     id: {\r\n  //       title: 'ID',\r\n  //       type: 'number',\r\n  //     },\r\n  //     firstName: {\r\n  //       title: 'First Name',\r\n  //       type: 'string',\r\n  //     },\r\n  //     lastName: {\r\n  //       title: 'Last Name',\r\n  //       type: 'string',\r\n  //     },\r\n  //     username: {\r\n  //       title: 'Username',\r\n  //       type: 'string',\r\n  //     },\r\n  //     email: {\r\n  //       title: 'E-mail',\r\n  //       type: 'string',\r\n  //     },\r\n  //     age: {\r\n  //       title: 'Age',\r\n  //       type: 'list',\r\n  //       config: {\r\n  //         list: [{title: '28', value: '28'}, {title: '45', value: '45'},{title: '30', value: '30'}, {title: '20', value: '20'}]\r\n  //       }\r\n  //     },\r\n  //     movie: {\r\n  //       title: 'Movie',\r\n  //       type: 'list',\r\n  //       config: {\r\n  //         list: [{title: 'Lion King', value: '1'}, {title: 'The Matrix', value: '2'}]\r\n  //       }\r\n  //     },\r\n  //   },\r\n  // };\r\n\r\n  settings = {\r\n       add: {\r\n         addButtonContent: '<i class=\"nb-plus\"></i>',\r\n         createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n         cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n       },\r\n       edit: {\r\n         editButtonContent: '<i class=\"nb-edit\"></i>',\r\n         saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n         cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n       },\r\n       delete: {\r\n         deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n         confirmDelete: true,\r\n       }, \r\n       columns: { userId: { title: 'Company Id', type: 'html', editor: { type: 'list', config: { list: [{ value: 'Antonette', title: 'Antonette' }, { value: 'Bret', title: 'Bret' }, { value: '<b>Samantha</b>', title: 'Samantha' }] } } }, id: { title: 'Employee Number' }, title: { title: 'Title' }, completed: { title: 'Completed' } }, };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Smart Table\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'smart-table',\r\n      component: SmartTableComponent,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\r\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    FsIconComponent,\r\n  ],\r\n})\r\nexport class TablesModule { }\r\n","import { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: string;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\r\n        { data: { name: 'project-3', kind: 'txt', size: '466 KB' } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: '100 KB' } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: '300 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n"]}